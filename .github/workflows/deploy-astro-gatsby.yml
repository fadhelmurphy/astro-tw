# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Deploy Gatsby with astro

on:
  push:
    branches: [dev-astro, staging-astro]
  pull_request:
    branches: [dev-astro, staging-astro]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.15.0]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Checkout gatsby
        run: git fetch && git checkout dev

      - name: Installing my packages
        run: yarn install

      - name: Build Gatsby
        run: yarn build
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
      - run: touch ./public/.nojekyll
      - run: mkdir ../hasil-build
      - run: sudo cp -r ./public/* ../hasil-build/

      - name: Checkout astro
        run: git fetch && git checkout dev-astro

      - name: Installing my packages
        run: yarn install

      - name: Build Astro
        run: yarn build
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
      - run: touch ./dist/.nojekyll
      - run: sudo cp -r ./dist/* ../hasil-build/
      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # upload entire directory
          path: "../hasil-build/"
  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      # url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2 # or the latest "vX.X.X" version tag for this action

  versioning:
    # Add a dependency to the build job
    needs: deploy
    if:  |
      contains('
        refs/heads/staging-astro
        refs/heads/production-astro
      ', github.ref)
    runs-on: ubuntu-latest
    steps:
    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: extract_branch
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ steps.extract_branch.outputs.branch }}-${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }} # This token is provided by Actions, you do not need to create your own token
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        assets_path: .
        assets_name: webgue-v${{ github.run_number }}.zip
        asset_content_type: application/zip
